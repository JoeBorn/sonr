From 52d7c16032aa1c5612f30cb3b4388234eff62aa3 Mon Sep 17 00:00:00 2001
From: Karol Wilk <karolw@gmail.com>
Date: Sun, 8 Jan 2012 21:46:25 -0700
Subject: [PATCH] add Cancel/Quit button to media player list screen

---
 build.xml                                  |    2 +-
 res/menu/main.xml                          |    4 +++
 src/com/sonrlabs/test/sonr/SONR.java       |   35 +++++++++++++++++++++------
 src/com/sonrlabs/test/sonr/SONRClient.java |    5 ++-
 4 files changed, 35 insertions(+), 11 deletions(-)

diff --git a/build.xml b/build.xml
index 5457960..5e7160f 100644
--- a/build.xml
+++ b/build.xml
@@ -81,7 +81,7 @@
     <!-- version-tag: 1 -->
     <import file="${sdk.dir}/tools/ant/build.xml" />
     
-   <target name="deploy" depends="release">
+   <target name="deploy" >
       <exec executable="/bin/sh">
          <arg value="install-sonr.sh"/>
       </exec>
diff --git a/res/menu/main.xml b/res/menu/main.xml
index 73da521..ae96cdc 100644
--- a/res/menu/main.xml
+++ b/res/menu/main.xml
@@ -1,4 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <menu
   xmlns:android="http://schemas.android.com/apk/res/android">
+  <item android:id="@+id/quitOption"
+          android:icon="@android:drawable/ic_lock_power_off"
+          android:title="Quit" />
+    
 </menu>
diff --git a/src/com/sonrlabs/test/sonr/SONR.java b/src/com/sonrlabs/test/sonr/SONR.java
index 805a05d..2569729 100644
--- a/src/com/sonrlabs/test/sonr/SONR.java
+++ b/src/com/sonrlabs/test/sonr/SONR.java
@@ -95,8 +95,8 @@ public class SONR
 
    @Override
    public void onCreate(Bundle savedInstanceState) {
+      super.onCreate(savedInstanceState);
       try {
-         super.onCreate(savedInstanceState);
 
          Common.save(this, SONR.PLAYER_SELECTED, false);
 
@@ -178,14 +178,16 @@ public class SONR
       ApplicationInfo ai;
       ai = infos.get(position);
       List<ResolveInfo> rinfos = findActivitiesForPackage(this, ai.packageName);
-      ResolveInfo ri = rinfos.get(0);
-
-      Common.save(this, SONR.APP_PACKAGE_NAME, ri.activityInfo.packageName);
-      Common.save(this, SONR.APP_FULL_NAME, ri.activityInfo.name);
-      Common.save(this, SONR.PLAYER_SELECTED, true);
+      if (!rinfos.isEmpty()) {
+         ResolveInfo ri = rinfos.get(0);
+         
+         Common.save(this, SONR.APP_PACKAGE_NAME, ri.activityInfo.packageName);
+         Common.save(this, SONR.APP_FULL_NAME, ri.activityInfo.name);
+         Common.save(this, SONR.PLAYER_SELECTED, true);
 
-      currentlySelectedApplicationInfoIndex = position;
-      listView.invalidateViews();
+         currentlySelectedApplicationInfoIndex = position;
+         listView.invalidateViews();
+      }
    }
 
    public void buttonOK(View view) {
@@ -338,6 +340,23 @@ public class SONR
       }
       return showMenu;
    }
+   
+   @Override
+   public boolean onOptionsItemSelected(MenuItem item) {
+      boolean consumeResult = super.onOptionsItemSelected(item); 
+      switch (item.getItemId()) {
+         case R.id.quitOption:
+            stopService(new Intent(this, ToggleSONR.class));
+            theclient.destroy();
+            finish();
+            consumeResult = true;
+            break;
+         default:
+            consumeResult = false;
+            break;
+      }
+      return consumeResult; 
+   }
 
    public static List<ApplicationInfo> convert(Context c, Collection<ResolveInfo> infos) {
       final List<ApplicationInfo> result = new ArrayList<ApplicationInfo>();
diff --git a/src/com/sonrlabs/test/sonr/SONRClient.java b/src/com/sonrlabs/test/sonr/SONRClient.java
index cc3cf76..3b4faee 100644
--- a/src/com/sonrlabs/test/sonr/SONRClient.java
+++ b/src/com/sonrlabs/test/sonr/SONRClient.java
@@ -24,7 +24,7 @@ public class SONRClient
    
    /*
     * No idea why this is public or static, or even what it's for. Some Android
-    * reflective magic?
+    * reflective magic? - Answer: just a static variable to maintain state by original author
     */
    public static boolean CLIENT_ON = false;
    
@@ -122,11 +122,12 @@ public class SONRClient
          public void onReceive(Context context, Intent intent) {
             // Handle reciever
             String mAction = intent.getAction();
-            if (mAction.equals(SONR.DISCONNECT_ACTION)) {
+            if (SONR.DISCONNECT_ACTION.equals(mAction)) {
                destroy();
             }
          }
       };
+      
       ctx.registerReceiver(clientStopReceiver, new IntentFilter(SONR.DISCONNECT_ACTION));
       Log.i(getClass().getName(), "Registered broadcast receiver " + clientStopReceiver + " in context " + ctx);
    }
-- 
1.7.5.4

